import styled from "styled-components";
import { motion, useScroll } from "framer-motion";
import { useRef } from "react";

const Container = styled.section`
  width: 100%;
  height: 2160px;
  background: #222;
  color: #fff;
  display: flex;
  justify-content: center;
`;

const SvgArea = styled.div`
  width: fit-content;
  align-self: flex-end;
  position: relative;
  .load {
    width: 818px;
    height: 1945px;
    stroke: #fff;
    stroke-width: 2;
    fill: none;
  }

  .plane {
    width: 50px;
    height: 51px;
    fill: #c8f31d;
    position: absolute;
    top: 0;
    left: 0;
    offset-path: path(
      "M2.1377 2C2.1377 38.8705 6.62485 84.0024 22.5659 117.76C34.6001 143.244 54.8894 173.116 76.852 190.961C102.822 212.062 129.309 240.105 160.456 253.948C167.106 256.903 171.212 261.008 175.967 255.461C180.93 249.671 192.075 234.789 192.801 247.139C193.595 260.635 205.582 277.152 206.42 291.4C209.754 348.075 234.11 410.632 254.086 464.851C277.35 527.996 300.141 596.96 339.203 652.298C363.758 687.085 411.04 679.712 442.858 660.621C499.377 626.71 493.762 508.469 417.512 512.706C386.188 514.446 366.441 566.905 366.441 591.014C366.441 663.793 357.929 738.691 370.602 811.563C385.615 897.883 408.146 982.953 448.154 1060.86C460.807 1085.5 480.987 1123.96 504.142 1140.5C506.62 1142.27 515.047 1125.08 517.005 1122.9C526.448 1112.41 520.378 1122.77 524.76 1130.66C532.483 1144.56 529.374 1165.3 535.92 1180.03C542.633 1195.13 540.872 1212.45 547.647 1227.69C552.464 1238.53 552.57 1251.16 556.348 1262.5C561.383 1277.6 567.886 1293.8 570.723 1309.41C575.132 1333.65 587.896 1358.85 598.717 1380.9C610.554 1405.03 621.142 1431.7 635.602 1454.3C638.227 1458.4 671.933 1503.44 673.621 1500.07C682.273 1482.77 700.102 1461.55 700.102 1491.56C700.102 1524.91 717.368 1563.97 728.096 1596.16C752.777 1670.2 783.886 1743.87 795.434 1821.81C799.045 1846.19 809.052 1874.41 809.052 1898.42C809.052 1913.3 815.862 1928.42 815.862 1942.68"
    );
  }
`;

const transition = {
  duration: 10,
  yoyo: Infinity,
  ease: "linear",
};

const Intro = () => {
  const ref = useRef(null);
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ["end end", "start start"],
  });
  return (
    <Container>
      <SvgArea ref={ref}>
        <svg className="load" viewBox="0 0 818 1945">
          <motion.path
            initial={{ pathLength: 0.001 }}
            animate={{ pathLength: 1 }}
            transition={transition}
            d="M2.1377 2C2.1377 38.8705 6.62485 84.0024 22.5659 117.76C34.6001 143.244 54.8894 173.116 76.852 190.961C102.822 212.062 129.309 240.105 160.456 253.948C167.106 256.903 171.212 261.008 175.967 255.461C180.93 249.671 192.075 234.789 192.801 247.139C193.595 260.635 205.582 277.152 206.42 291.4C209.754 348.075 234.11 410.632 254.086 464.851C277.35 527.996 300.141 596.96 339.203 652.298C363.758 687.085 411.04 679.712 442.858 660.621C499.377 626.71 493.762 508.469 417.512 512.706C386.188 514.446 366.441 566.905 366.441 591.014C366.441 663.793 357.929 738.691 370.602 811.563C385.615 897.883 408.146 982.953 448.154 1060.86C460.807 1085.5 480.987 1123.96 504.142 1140.5C506.62 1142.27 515.047 1125.08 517.005 1122.9C526.448 1112.41 520.378 1122.77 524.76 1130.66C532.483 1144.56 529.374 1165.3 535.92 1180.03C542.633 1195.13 540.872 1212.45 547.647 1227.69C552.464 1238.53 552.57 1251.16 556.348 1262.5C561.383 1277.6 567.886 1293.8 570.723 1309.41C575.132 1333.65 587.896 1358.85 598.717 1380.9C610.554 1405.03 621.142 1431.7 635.602 1454.3C638.227 1458.4 671.933 1503.44 673.621 1500.07C682.273 1482.77 700.102 1461.55 700.102 1491.56C700.102 1524.91 717.368 1563.97 728.096 1596.16C752.777 1670.2 783.886 1743.87 795.434 1821.81C799.045 1846.19 809.052 1874.41 809.052 1898.42C809.052 1913.3 815.862 1928.42 815.862 1942.68"
          />
        </svg>
        <motion.div
          className="plane"
          initial={{ offsetDistance: "0%" }}
          animate={{ offsetDistance: "100%" }}
          transition={transition}
        >
          <svg viewBox="0 0 155 155">
            <path
              d="M137.427 78.5454C137.442 77.6419 137.197 76.7532 136.719 75.9861C136.241 75.2191 135.552 74.6065 134.734 74.2222L59.185 38.5669L59.1741 38.5557C58.2991 38.1484 57.3196 38.0212 56.3696 38.1914C55.4195 38.3616 54.5451 38.8209 53.8659 39.5066C53.1866 40.1924 52.7356 41.0711 52.5745 42.0227C52.4133 42.9743 52.5498 43.9525 52.9654 44.8237L53.0028 44.8989L63.3954 72.143C63.6446 72.6295 64.017 73.0422 64.4755 73.3398C64.934 73.6374 65.4625 73.8096 66.0083 73.8391L124.754 76.9368C124.935 76.94 125.114 76.9788 125.281 77.0511C125.447 77.1234 125.597 77.2278 125.723 77.3583C125.849 77.4887 125.948 77.6427 126.015 77.8115C126.081 77.9802 126.114 78.1604 126.111 78.3417C126.108 78.5231 126.069 78.702 125.997 78.8683C125.924 79.0346 125.82 79.1851 125.689 79.3111C125.559 79.4371 125.405 79.5362 125.236 79.6026C125.068 79.6691 124.887 79.7017 124.706 79.6986L65.9008 80.7367C65.3543 80.7472 64.8201 80.9008 64.3515 81.1823C63.883 81.4638 63.4964 81.8633 63.2305 82.3409L51.8882 109.221C51.8683 109.256 51.8511 109.289 51.8339 109.325C50.9658 111.032 51.1461 113.057 52.4126 114.493L52.5483 114.633C53.2149 115.331 54.0762 115.813 55.0201 116.015C55.964 116.217 56.9469 116.13 57.841 115.767L134.566 82.7721C135.4 82.4193 136.114 81.8324 136.622 81.0823C137.13 80.3322 137.409 79.451 137.427 78.5454Z"
              fill="#C8F31D"
            />
          </svg>
        </motion.div>
      </SvgArea>
    </Container>
  );
};

export default Intro;
